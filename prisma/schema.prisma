datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Gender {
  Varonil
  Femenil
}

enum Level {
  Quinta
  Cuarta
  Tercera
  Segunda
  Primera
}

model Player {
  id               String   @id @default(uuid())
  name             String
  email            String?
  age              Int?
  phone            String?
  gender           Gender
  level            Level
  couplesAsPlayer1 Couple[] @relation("Player1")
  couplesAsPlayer2 Couple[] @relation("Player2")
  points           Int       @default(0)
}

model Tournament {
  id           String   @id @default(uuid())
  name         String
  courts       Int
  couples      Couple[]
  rounds       Round[]
  winnerId     String?
  winner       Couple?    @relation("TournamentWinner", fields: [winnerId], references: [id])
  isFinished   Boolean    @default(false)
  currentRound Int        @default(1)
  createdAt    DateTime   @default(now())
}

model Couple {
  id             String        @id @default(uuid())
  player1Id      String
  player1        Player        @relation("Player1", fields: [player1Id], references: [id])
  player2Id      String
  player2        Player        @relation("Player2", fields: [player2Id], references: [id])
  tournamentId   String
  tournament     Tournament    @relation(fields: [tournamentId], references: [id])
  matchesAsCouple1 Match[]     @relation("Couple1")
  matchesAsCouple2 Match[]     @relation("Couple2")
  wonTournaments   Tournament[] @relation("TournamentWinner")
}

model Round {
  id           String   @id @default(uuid())
  tournamentId String
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  matches      Match[]
  isActive     Boolean
  roundNumber  Int       
}

model Match {
  id            String   @id @default(uuid())
  roundId       String
  round         Round    @relation(fields: [roundId], references: [id])
  couple1Id     String
  couple1       Couple   @relation("Couple1", fields: [couple1Id], references: [id])
  couple2Id     String
  couple2       Couple   @relation("Couple2", fields: [couple2Id], references: [id])
  couple1Score  Int?
  couple2Score  Int?
  court         Int
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  isAdmin   Boolean  @default(false) 
  createdAt DateTime @default(now())
}
